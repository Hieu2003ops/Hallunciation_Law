from typing import List
import re

def format_tavily_result(raw_result: List[dict]) -> str:
    formatted = "üìö **K·∫øt qu·∫£ t·ª´ Tavily:**\n\n"
    seen_urls = set()
    idx_counter = 1  # ƒê·ªÉ ƒë√°nh s·ªë th·ª© t·ª± cho c√°c m·ª•c duy nh·∫•t
    
    for item in raw_result:
        url = item.get("url", "Kh√¥ng c√≥ URL")
        # N·∫øu URL ƒë√£ xu·∫•t hi·ªán, b·ªè qua m·ª•c n√†y
        if url in seen_urls:
            continue    
        seen_urls.add(url)
        
        content = item.get("content", "Kh√¥ng c√≥ n·ªôi dung").strip()
        source_type = (
            "official"
            if any(domain in url for domain in ["phapluat", "hethongphapluat", "lawnet", "moj.gov", "quochoi.vn"])
            else "news"
        )
        # L√†m s·∫°ch content ‚Äì ng·∫Øt d√≤ng d√†i
        content = content.replace(". ", ".\n").replace("? ", "?\n").replace("! ", "!\n")
        
        # Format m·ªói m·ª•c ƒë·∫πp
        formatted += f"### {idx_counter}.{url}\n"
        formatted += f"üîó **Lo·∫°i ngu·ªìn:** `{source_type}`\n"
        formatted += f"**T√≥m t·∫Øt n·ªôi dung:**\n{content}\n"
        formatted += "-" * 10 + "\n"
        idx_counter += 1
    
    return formatted




def format_news_results(results: dict) -> str:
    if not results or "news" not in results:
        return "Kh√¥ng t√¨m th·∫•y k·∫øt qu·∫£ tin t·ª©c n√†o."

    formatted = "K·∫øt qu·∫£ T√¨m ki·∫øm Tin t·ª©c:\n\n"
    for idx, item in enumerate(results["news"], start=1):
        title = item.get("title", "Kh√¥ng c√≥ ti√™u ƒë·ªÅ")
        snippet = item.get("snippet", "Kh√¥ng c√≥ m√¥ t·∫£")
        link = item.get("link", "Kh√¥ng c√≥ link")
        date = item.get("date", "Kh√¥ng c√≥ ng√†y")
        source = item.get("source", "Kh√¥ng c√≥ ngu·ªìn")
        formatted += f"{idx}. {title}\n"
        formatted += f"   - Ngu·ªìn: {source} | Ng√†y: {date}\n"
        formatted += f"   - M√¥ t·∫£: {snippet}\n"
        formatted += f"   - Link: {link}\n\n"
    return formatted